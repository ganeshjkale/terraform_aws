---
  - name: installing packages on k8s master
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - kubelet
      - kubeadm
      - kubectl
      - docker.io
      - vim
      - net-tools
      - unzip

  - name: Update master hostname
    hostname:
      name: control-plane

  - name: Modify kubeadm config to match with docker info cgroups
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      regexp: '^Environment="KUBELET_KUBECONFIG_ARGS='
      line: Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=cgroupfs"
  
  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Reset kubeadm
    command: kubeadm reset -f
  
  - name: Initialize control plane master
    command: kubeadm init --node-name control-plane --ignore-preflight-errors=Mem --ignore-preflight-errors=NumCPU

  - name: Setup kubeconfig for root user
    command: "{{ item }}"
    with_items:
     - mkdir -p /root/.kube
     - cp -i /etc/kubernetes/admin.conf /root/.kube/config
     - chown root:root /root/.kube/config

  - name: Install calico pod network
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
 
  - name: Install metric server 
    command: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 
  
  - name: Modify kubeadm config to match with docker info cgroups
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      regexp: '^Environment="KUBELET_KUBECONFIG_ARGS='
      line: Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=cgroupfs"

  - name: Copy code to master
    copy: src=two_tier_app_k8.tgz dest=/home/ubuntu/two_tier_app_k8.tgz mode=0644
